*,
*::before,
*::after {
  box-sizing: border-box;
}

*:focus,
:focus-visible {
  outline: none;
}

html {
  block-size: 100%;
}

h1,
h2,
h3,
h4,
p,
ul,
ol,
li,
blockquote,
fieldset {
  margin: 0;
  padding: 0;
}

ul,
ol {
  list-style: none;
}

/* Сбросьте border у fieldset. */
fieldset {
  border: none;
}

.visually-hidden {
  position: absolute;
  inline-size: 1px;
  block-size: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  white-space: nowrap;
}

/* Расположить блок .content посередине .page. */
.page {
  display: flex;
  justify-content: center;
  align-items: center;
  inline-size: 1200px;
  block-size: 100%;
  margin: auto;
  color: #fff;
  font-family: "Fira Sans Condensed", sans-serif;
  font-size: 18px;
  background-color: #1b1919;
}

/* весь контент на странице*/
/* 
Расположить элементы .content в строку, прижав к низу вертикальной оси.
Задать горизонтальные размеры .content и отступы между его элементами */
.content {
  display: flex;
  flex-direction: row;
  align-items: end;
  min-width: 1140px;
  gap: 30px;
}

/* секция с видео и поиском */
.result {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  gap: 16px;
}

/*главный контейнер с видео */
/* Задать размеры контейнеру .result__video-container и добавить отступ снизу.
Замостить видео в этот контейнер так, чтобы оно занимало всю ширину и высоту и не выходило за пределы. */
.result__video-container {
  position: relative;
  width: 711px;
  height: 386px;
}

/* главное видео, доступное для проигрывания */
.result__video {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

/* панель с поиском - строка поиска, чекбоксы, кнопка */
/* Расположить элементы .search-form в строку и 
пропорционально распределить между ними свободное пространство, 
прижать их к началу контейнера. */
.search-form {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  gap: 40px;
  align-items: center;
}

/* общий класс для наборов полей - поиск города и чекбоксы */
.search-form__fieldset {
  display: flex;
  flex-direction: column;
  justify-content: start;
  gap: 5px;
}

/* поле поиска города */
/* Текстовому полю нужно задать свойство appearance: none;. Так в разных браузерах будут нужные вам стили. Это трюк. */

/* 
У этого элемента нужно сбросить обводку в состоянии фокуса и вместо этого делать границу у лейбла, который его окружает. 
Лейбл должен получать границу только когда у поля находится в состоянии focus-visible, но не focus. 
Чтобы такое реализовать, можно применить хитрую комбинацию псевдоклассов — :has(:focus-visible). */
.search-form__textfield {
  color: rgba(255, 255, 255, 0.7);
  font-family: Fira Sans Condensed;
  font-size: 18px;
  min-width: 225px;
  background-color: transparent;
  border: 1px solid #fff;
  border-left: none;
  border-right: none;
  appearance: none;
}

.search-form__label:has(:focus-visible) {
  outline: 1px solid #fff;
  outline-offset: 1px;
}

/* Обратите внимание, что подчёркивание должно появляться при наведении на любую точку лейбла, а не только на сам текст */
.search-form__label:not(:has(.search-form__textfield)):hover {
  text-decoration: underline;
}
.search-form__textfield:active {
  border: 1px solid #fff;
}

/* Заголовки строки поиска и наборов чекбоксов - Город и Время суток */
.search-form__fieldset-title {
  color: #fff;
  font-family: Fira Sans Condensed;
  font-size: 18px;
  font-weight: 400;
}

/* подписи элементов форм */

/* Вам нужно расставить элементы внутри .search-form__label в линию. 
И при этом подогнать ширину контейнера под размер внутренних элементов. 
Для этого пригодится правило width: fit-content;. */
.search-form__label {
  display: flex;
  flex-direction: row;
  align-items: center;
  width: fit-content;
  gap: 5px;
}

/* список чекбоксов для выбора времени суток */
/* Обёртка .search-form__checkbox-list создана специально для того, чтобы выстроить чекбоксы в линию. */
.search-form__checkbox-list {
  display: flex;
  flex-direction: row;
  gap: 15px;
}

/* чекбокс, который скрываем */
/* .search-form__checkbox {
} */

/* чекбокс, который отрисовываем */
/* Когда будете рисовать .search-form__pseudo-checkbox, учитывайте, что в нём появится элемент, который должен оказаться точно по центру. 
Если присмотритесь к макету, заметите, что внутренний квадрат включённого чекбокса чуть меньше самого чекбокса. 
Это мы сверстаем отдельно следующим шагом. */
.search-form__pseudo-checkbox {
  width: 19px;
  height: 19px;
  border: 1px solid #fff;
  cursor: pointer;
}

/* Если вы применяли псевдокласс :has() для текстового инпута, здесь тоже будет работать это правило. 
 Вам не придётся прописывать отдельно состояние focus и focus-visible для чекбокса. 
 Но если вы пошли другим путём, задумайтесь, как добиться того, чтобы состояние focus не создавало обводку у родительского элемента, 
 а состояние focus-visible создавало. */
.search-form__label:has(.search-form__checkbox:focus-visible) {
  outline: 1px solid #fff;
}

/* На макете при нажатии чекбокса внутри появляется квадрат. Он чуть меньше чекбокса. 
 Мы предлагаем вам реализовать его псевдоэлементом для .search-form__pseudo-checkbox. 
 У вас получится непростая комбинация селекторов «псевдоэлемент для первого соседа зажатого чекбокса». */
.search-form__checkbox:checked + .search-form__pseudo-checkbox::before {
  display: block;
  content: "";
  width: 17px;
  height: 17px;
  border: 1px solid #1b1919;
  background-color: #fff;
}

/* подпись чекбокса Утро-День-Ночь*/
.search-form__label-text {
  cursor: pointer;
}

/* общий класс для двух кнопок - Найти и Показать еще */
.button {
  background-color: transparent;
  border: 1px solid #fff;
  color: #fff;
  font-family: Fira Sans Condensed;
  font-size: 18px;
  font-weight: 700;
  width: 100%;
  height: 34px;
  cursor: pointer;
}

.button:focus-visible {
  outline: 1px double #fff;
  outline-offset: 1px;
  border: 1px solid #fff;
}

.button:hover {
  text-decoration: underline;
}

.button:active {
  background-color: #545050;
}

/* кнопка для поиска видео по заданным параметрам */
.search-form__submit-button {
  align-self: end;
}

/* правая секция с заголовком и карточками других видео */
/* Растянуть .content__details во всю доступную ширину и высоту контейнера 
и добавить отступы между заголовком и зоной с карточками. */
.content__details {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  gap: 26px;
}

/* заголовок секции Посмотри в окно */
.title {
  color: #fff;
  font-family: Oswald;
  font-size: 75px;
  font-style: normal;
  font-weight: 700;
  line-height: 94%; /* 70.5px */
  text-transform: uppercase;
}

/* акцент в заголовке - выделенное ерым "ПО-" */
.content__accent {
  color: #545050;
  font-family: Oswald;
  font-size: 75px;
  font-weight: 700;
  line-height: 94%;
  text-transform: uppercase;
}

/* список остальных видео */
/* Установить вертикальный размер для .content__list и добавить скролл при переполнении. */
.content__list {
  overflow-y: auto;
  position: relative;
  display: flex;
  flex-direction: column;
  height: 298px;
}

.content__list-item {
  height: 103px;
}

/* пункт списка остальных видео. вкелючающий в себя карточку и ссылку */
/* Создать вертикальные отступы между элементами .content__list-item (у всех, кроме последнего). */
.content__list-item:not(:last-child) {
  margin-bottom: 30px;
}

/* стиль ссылки из карточки с дополнительным видео */
/* Убрать дефолтное подчёркивание и заменить цвет текста у ссылки */
/* чтобы фон применился, ссылку .content__card-link нужно сделать блочным элементом. */
.content__card-link {
  display: block;
  color: #fff;
  text-decoration: none;
  cursor: pointer;
  margin: 2px;
}

/* текущее выбранное видео */
/* Первая карточка должна быть активной, а при переключении активная карточка должна выделяться. 
Это поведение уже написано на JavaScript. Но в CSS должны оказаться соответствующие стили для селектора .content__card-link_current. 
Есть одна особенность: чтобы фон применился, ссылку .content__card-link нужно сделать блочным элементом. */
.content__card-link_current {
  background-color: #545050;
}

/* Чтобы состояние :focus-visible работало корректно, придётся сбросить обводку на состоянии :focus. */
.content__card-link:focus {
  outline: none;
}

.content__card-link:focus-visible {
  outline: 1px solid #fff;
}

.content__card-link:hover {
  text-decoration: underline;
}

.content__card-link:active {
  background-color: #545050;
}

/* карточка с заголовком, видео и описанием */
/* Расположить элементы внутри контейнера .content__video-card в строку, 
прижав к началу контейнера по дополнительной оси. */
.content__video-card {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: start;
  margin: 2px;
}

/* контейнер с текстом карточки Заголовок + Описание */
/* Сделать так, чтобы .content__video-card-description-container 
занимал всё доступное пространство, не занятое картинкой. */
.content__video-card-description-container {
  display: flex;
  flex-direction: column;
  gap: 4px;
  width: 100%;
}

/* заголовок карточки */
.content__video-card-title {
  color: #fff;
  font-family: Oswald;
  font-size: 30px;
  font-weight: 700;
  line-height: 100%; /* 30px */
  text-transform: uppercase;
}

/* описание карточки */
.content__video-card-description {
  color: #fff;
  font-family: Fira Sans Condensed;
  font-size: 18px;
  font-weight: 400;
  line-height: 16.2px; /* 90% */
}

/* обложка видео из карточки */
/* Задать размеры .content__video-card-thumbnail и замостить в них изображение. */
.content__video-card-thumbnail {
  max-width: 194px;
  max-height: 103px;
  object-fit: cover;
}

/* кнока подгрузки карточек с видео Показать еще*/
.more-button {
  width: 100%;
}
